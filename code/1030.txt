
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 1a                	add    %bl,(%edx)
 8048199:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 804819a:	8a c7                	mov    %bh,%al
 804819c:	1d 39 42 04 fb       	sbb    $0xfb044239,%eax
 80481a1:	33 eb                	xor    %ebx,%ebp
 80481a3:	1e                   	push   %ds
 80481a4:	7a 69                	jp     804820f <_init-0xe9>
 80481a6:	1c 96                	sbb    $0x96,%al
 80481a8:	be                   	.byte 0xbe
 80481a9:	a0                   	.byte 0xa0
 80481aa:	c7                   	(bad)  
 80481ab:	57                   	push   %edi

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	05 00 00 00 01       	add    $0x1000000,%eax
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 05 00 00 00 ad    	add    %al,0xad000000
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x16c>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	38 00                	cmp    %al,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	01 00                	add    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	20 00                	and    %al,(%eax)
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	3f                   	aas    
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 29                	add    %ch,(%ecx)
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 1a                	add    %bl,(%edx)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 7c 85 04          	add    %bh,0x4(%ebp,%eax,4)
 8048223:	08 04 00             	or     %al,(%eax,%eax,1)
 8048226:	00 00                	add    %al,(%eax)
 8048228:	11 00                	adc    %eax,(%eax)
 804822a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804822c <.dynstr>:
 804822c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804822f:	67 6d                	insl   (%dx),%es:(%di)
 8048231:	6f                   	outsl  %ds:(%esi),(%dx)
 8048232:	6e                   	outsb  %ds:(%esi),(%dx)
 8048233:	5f                   	pop    %edi
 8048234:	73 74                	jae    80482aa <_init-0x4e>
 8048236:	61                   	popa   
 8048237:	72 74                	jb     80482ad <_init-0x4b>
 8048239:	5f                   	pop    %edi
 804823a:	5f                   	pop    %edi
 804823b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804823f:	63 2e                	arpl   %bp,(%esi)
 8048241:	73 6f                	jae    80482b2 <_init-0x46>
 8048243:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048248:	4f                   	dec    %edi
 8048249:	5f                   	pop    %edi
 804824a:	73 74                	jae    80482c0 <_init-0x38>
 804824c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048253:	64 
 8048254:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048257:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%ebx),%esi
 804825e:	73 63                	jae    80482c3 <_init-0x35>
 8048260:	61                   	popa   
 8048261:	6e                   	outsb  %ds:(%esi),(%dx)
 8048262:	66                   	data16
 8048263:	00 70 72             	add    %dh,0x72(%eax)
 8048266:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804826d:	6c                   	insb   (%dx),%es:(%edi)
 804826e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048275:	72 74                	jb     80482eb <_init-0xd>
 8048277:	5f                   	pop    %edi
 8048278:	6d                   	insl   (%dx),%es:(%edi)
 8048279:	61                   	popa   
 804827a:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 8048281:	43                   	inc    %ebx
 8048282:	5f                   	pop    %edi
 8048283:	32 2e                	xor    (%esi),%ch
 8048285:	37                   	aaa    
 8048286:	00 47 4c             	add    %al,0x4c(%edi)
 8048289:	49                   	dec    %ecx
 804828a:	42                   	inc    %edx
 804828b:	43                   	inc    %ebx
 804828c:	5f                   	pop    %edi
 804828d:	32 2e                	xor    (%esi),%ch
 804828f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048292 <.gnu.version>:
 8048292:	00 00                	add    %al,(%eax)
 8048294:	02 00                	add    (%eax),%al
 8048296:	00 00                	add    %al,(%eax)
 8048298:	02 00                	add    (%eax),%al
 804829a:	03 00                	add    (%eax),%eax
 804829c:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482a0 <.gnu.version_r>:
 80482a0:	01 00                	add    %eax,(%eax)
 80482a2:	02 00                	add    (%eax),%al
 80482a4:	10 00                	adc    %al,(%eax)
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	10 00                	adc    %al,(%eax)
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	00 00                	add    %al,(%eax)
 80482ae:	00 00                	add    %al,(%eax)
 80482b0:	17                   	pop    %ss
 80482b1:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%ecx),%ebp
 80482b8:	51                   	push   %ecx
 80482b9:	00 00                	add    %al,(%eax)
 80482bb:	00 10                	add    %dl,(%eax)
 80482bd:	00 00                	add    %al,(%eax)
 80482bf:	00 10                	add    %dl,(%eax)
 80482c1:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 80482c8:	5b                   	pop    %ebx
 80482c9:	00 00                	add    %al,(%eax)
 80482cb:	00 00                	add    %al,(%eax)
 80482cd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482d0 <.rel.dyn>:
 80482d0:	f0 9f                	lock lahf 
 80482d2:	04 08                	add    $0x8,%al
 80482d4:	06                   	push   %es
 80482d5:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

080482d8 <.rel.plt>:
 80482d8:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	04 a0                	add    $0xa0,%al
 80482e2:	04 08                	add    $0x8,%al
 80482e4:	07                   	pop    %es
 80482e5:	02 00                	add    (%eax),%al
 80482e7:	00 08                	add    %cl,(%eax)
 80482e9:	a0 04 08 07 03       	mov    0x3070804,%al
 80482ee:	00 00                	add    %al,(%eax)
 80482f0:	0c a0                	or     $0xa0,%al
 80482f2:	04 08                	add    $0x8,%al
 80482f4:	07                   	pop    %es
 80482f5:	04 00                	add    $0x0,%al
	...

Disassembly of section .init:

080482f8 <_init>:
 80482f8:	53                   	push   %ebx
 80482f9:	83 ec 08             	sub    $0x8,%esp
 80482fc:	e8 00 00 00 00       	call   8048301 <_init+0x9>
 8048301:	5b                   	pop    %ebx
 8048302:	81 c3 f3 1c 00 00    	add    $0x1cf3,%ebx
 8048308:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804830e:	85 c0                	test   %eax,%eax
 8048310:	74 05                	je     8048317 <_init+0x1f>
 8048312:	e8 39 00 00 00       	call   8048350 <__gmon_start__@plt>
 8048317:	e8 f4 00 00 00       	call   8048410 <frame_dummy>
 804831c:	e8 0f 02 00 00       	call   8048530 <__do_global_ctors_aux>
 8048321:	83 c4 08             	add    $0x8,%esp
 8048324:	5b                   	pop    %ebx
 8048325:	c3                   	ret    

Disassembly of section .plt:

08048330 <printf@plt-0x10>:
 8048330:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048336:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804833c:	00 00                	add    %al,(%eax)
	...

08048340 <printf@plt>:
 8048340:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048346:	68 00 00 00 00       	push   $0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x38>

08048350 <__gmon_start__@plt>:
 8048350:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048356:	68 08 00 00 00       	push   $0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x38>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048366:	68 10 00 00 00       	push   $0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x38>

08048370 <__isoc99_scanf@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 18 00 00 00       	push   $0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x38>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 20 85 04 08       	push   $0x8048520
 8048390:	68 b0 84 04 08       	push   $0x80484b0
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 34 84 04 08       	push   $0x8048434
 804839c:	e8 bf ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	90                   	nop
 80483a3:	90                   	nop
 80483a4:	90                   	nop
 80483a5:	90                   	nop
 80483a6:	90                   	nop
 80483a7:	90                   	nop
 80483a8:	90                   	nop
 80483a9:	90                   	nop
 80483aa:	90                   	nop
 80483ab:	90                   	nop
 80483ac:	90                   	nop
 80483ad:	90                   	nop
 80483ae:	90                   	nop
 80483af:	90                   	nop

080483b0 <__do_global_dtors_aux>:
 80483b0:	55                   	push   %ebp
 80483b1:	89 e5                	mov    %esp,%ebp
 80483b3:	53                   	push   %ebx
 80483b4:	83 ec 04             	sub    $0x4,%esp
 80483b7:	80 3d 20 a0 04 08 00 	cmpb   $0x0,0x804a020
 80483be:	75 3f                	jne    80483ff <__do_global_dtors_aux+0x4f>
 80483c0:	a1 24 a0 04 08       	mov    0x804a024,%eax
 80483c5:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 80483ca:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 80483d0:	c1 fb 02             	sar    $0x2,%ebx
 80483d3:	83 eb 01             	sub    $0x1,%ebx
 80483d6:	39 d8                	cmp    %ebx,%eax
 80483d8:	73 1e                	jae    80483f8 <__do_global_dtors_aux+0x48>
 80483da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483e0:	83 c0 01             	add    $0x1,%eax
 80483e3:	a3 24 a0 04 08       	mov    %eax,0x804a024
 80483e8:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 80483ef:	a1 24 a0 04 08       	mov    0x804a024,%eax
 80483f4:	39 d8                	cmp    %ebx,%eax
 80483f6:	72 e8                	jb     80483e0 <__do_global_dtors_aux+0x30>
 80483f8:	c6 05 20 a0 04 08 01 	movb   $0x1,0x804a020
 80483ff:	83 c4 04             	add    $0x4,%esp
 8048402:	5b                   	pop    %ebx
 8048403:	5d                   	pop    %ebp
 8048404:	c3                   	ret    
 8048405:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048410 <frame_dummy>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	83 ec 18             	sub    $0x18,%esp
 8048416:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804841b:	85 c0                	test   %eax,%eax
 804841d:	74 12                	je     8048431 <frame_dummy+0x21>
 804841f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048424:	85 c0                	test   %eax,%eax
 8048426:	74 09                	je     8048431 <frame_dummy+0x21>
 8048428:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804842f:	ff d0                	call   *%eax
 8048431:	c9                   	leave  
 8048432:	c3                   	ret    
 8048433:	90                   	nop

08048434 <main>:
 8048434:	55                   	push   %ebp
 8048435:	89 e5                	mov    %esp,%ebp
 8048437:	83 e4 f0             	and    $0xfffffff0,%esp
 804843a:	83 ec 20             	sub    $0x20,%esp
 804843d:	b8 ca 85 04 08       	mov    $0x80485ca,%eax
 8048442:	89 04 24             	mov    %eax,(%esp)
 8048445:	e8 f6 fe ff ff       	call   8048340 <printf@plt>
 804844a:	b8 e0 85 04 08       	mov    $0x80485e0,%eax
 804844f:	8d 54 24 1c          	lea    0x1c(%esp),%edx
 8048453:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048457:	89 04 24             	mov    %eax,(%esp)
 804845a:	e8 11 ff ff ff       	call   8048370 <__isoc99_scanf@plt>
 804845f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048463:	3d e4 07 00 00       	cmp    $0x7e4,%eax
 8048468:	74 1e                	je     8048488 <main+0x54>
 804846a:	8b 15 18 a0 04 08    	mov    0x804a018,%edx
 8048470:	b8 e3 85 04 08       	mov    $0x80485e3,%eax
 8048475:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048479:	89 04 24             	mov    %eax,(%esp)
 804847c:	e8 bf fe ff ff       	call   8048340 <printf@plt>
 8048481:	b8 00 00 00 00       	mov    $0x0,%eax
 8048486:	eb 1c                	jmp    80484a4 <main+0x70>
 8048488:	8b 15 1c a0 04 08    	mov    0x804a01c,%edx
 804848e:	b8 e3 85 04 08       	mov    $0x80485e3,%eax
 8048493:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048497:	89 04 24             	mov    %eax,(%esp)
 804849a:	e8 a1 fe ff ff       	call   8048340 <printf@plt>
 804849f:	b8 01 00 00 00       	mov    $0x1,%eax
 80484a4:	c9                   	leave  
 80484a5:	c3                   	ret    
 80484a6:	90                   	nop
 80484a7:	90                   	nop
 80484a8:	90                   	nop
 80484a9:	90                   	nop
 80484aa:	90                   	nop
 80484ab:	90                   	nop
 80484ac:	90                   	nop
 80484ad:	90                   	nop
 80484ae:	90                   	nop
 80484af:	90                   	nop

080484b0 <__libc_csu_init>:
 80484b0:	55                   	push   %ebp
 80484b1:	57                   	push   %edi
 80484b2:	56                   	push   %esi
 80484b3:	53                   	push   %ebx
 80484b4:	e8 69 00 00 00       	call   8048522 <__i686.get_pc_thunk.bx>
 80484b9:	81 c3 3b 1b 00 00    	add    $0x1b3b,%ebx
 80484bf:	83 ec 1c             	sub    $0x1c,%esp
 80484c2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80484c6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80484cc:	e8 27 fe ff ff       	call   80482f8 <_init>
 80484d1:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80484d7:	29 c7                	sub    %eax,%edi
 80484d9:	c1 ff 02             	sar    $0x2,%edi
 80484dc:	85 ff                	test   %edi,%edi
 80484de:	74 29                	je     8048509 <__libc_csu_init+0x59>
 80484e0:	31 f6                	xor    %esi,%esi
 80484e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80484ec:	89 2c 24             	mov    %ebp,(%esp)
 80484ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80484f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484fb:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048502:	83 c6 01             	add    $0x1,%esi
 8048505:	39 fe                	cmp    %edi,%esi
 8048507:	75 df                	jne    80484e8 <__libc_csu_init+0x38>
 8048509:	83 c4 1c             	add    $0x1c,%esp
 804850c:	5b                   	pop    %ebx
 804850d:	5e                   	pop    %esi
 804850e:	5f                   	pop    %edi
 804850f:	5d                   	pop    %ebp
 8048510:	c3                   	ret    
 8048511:	eb 0d                	jmp    8048520 <__libc_csu_fini>
 8048513:	90                   	nop
 8048514:	90                   	nop
 8048515:	90                   	nop
 8048516:	90                   	nop
 8048517:	90                   	nop
 8048518:	90                   	nop
 8048519:	90                   	nop
 804851a:	90                   	nop
 804851b:	90                   	nop
 804851c:	90                   	nop
 804851d:	90                   	nop
 804851e:	90                   	nop
 804851f:	90                   	nop

08048520 <__libc_csu_fini>:
 8048520:	f3 c3                	repz ret 

08048522 <__i686.get_pc_thunk.bx>:
 8048522:	8b 1c 24             	mov    (%esp),%ebx
 8048525:	c3                   	ret    
 8048526:	90                   	nop
 8048527:	90                   	nop
 8048528:	90                   	nop
 8048529:	90                   	nop
 804852a:	90                   	nop
 804852b:	90                   	nop
 804852c:	90                   	nop
 804852d:	90                   	nop
 804852e:	90                   	nop
 804852f:	90                   	nop

08048530 <__do_global_ctors_aux>:
 8048530:	55                   	push   %ebp
 8048531:	89 e5                	mov    %esp,%ebp
 8048533:	53                   	push   %ebx
 8048534:	83 ec 04             	sub    $0x4,%esp
 8048537:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804853c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804853f:	74 13                	je     8048554 <__do_global_ctors_aux+0x24>
 8048541:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048546:	66 90                	xchg   %ax,%ax
 8048548:	83 eb 04             	sub    $0x4,%ebx
 804854b:	ff d0                	call   *%eax
 804854d:	8b 03                	mov    (%ebx),%eax
 804854f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048552:	75 f4                	jne    8048548 <__do_global_ctors_aux+0x18>
 8048554:	83 c4 04             	add    $0x4,%esp
 8048557:	5b                   	pop    %ebx
 8048558:	5d                   	pop    %ebp
 8048559:	c3                   	ret    
 804855a:	90                   	nop
 804855b:	90                   	nop

Disassembly of section .fini:

0804855c <_fini>:
 804855c:	53                   	push   %ebx
 804855d:	83 ec 08             	sub    $0x8,%esp
 8048560:	e8 00 00 00 00       	call   8048565 <_fini+0x9>
 8048565:	5b                   	pop    %ebx
 8048566:	81 c3 8f 1a 00 00    	add    $0x1a8f,%ebx
 804856c:	e8 3f fe ff ff       	call   80483b0 <__do_global_dtors_aux>
 8048571:	83 c4 08             	add    $0x8,%esp
 8048574:	5b                   	pop    %ebx
 8048575:	c3                   	ret    

Disassembly of section .rodata:

08048578 <_fp_hw>:
 8048578:	03 00                	add    (%eax),%eax
	...

0804857c <_IO_stdin_used>:
 804857c:	01 00                	add    %eax,(%eax)
 804857e:	02 00                	add    (%eax),%al
 8048580:	53                   	push   %ebx
 8048581:	6f                   	outsl  %ds:(%esi),(%dx)
 8048582:	72 72                	jb     80485f6 <_IO_stdin_used+0x7a>
 8048584:	79 2c                	jns    80485b2 <_IO_stdin_used+0x36>
 8048586:	e6 82                	out    %al,$0x82
 8048588:	a8 e5                	test   $0xe5,%al
 804858a:	8f                   	(bad)  
 804858b:	af                   	scas   %es:(%edi),%eax
 804858c:	e8 83 bd e6 98       	call   a0eb4314 <_end+0x98e6a2ec>
 8048591:	af                   	scas   %es:(%edi),%eax
 8048592:	e7 9b                	out    %eax,$0x9b
 8048594:	97                   	xchg   %eax,%edi
 8048595:	e7 89                	out    %eax,$0x89
 8048597:	88 e7                	mov    %ah,%bh
 8048599:	94                   	xchg   %eax,%esp
 804859a:	a8 e6                	test   $0xe6,%al
 804859c:	88 b7 e7 9a 84 e5    	mov    %dh,-0x1a7b6519(%edi)
 80485a2:	8f                   	(bad)  
 80485a3:	97                   	xchg   %eax,%edi
 80485a4:	e5 ae                	in     $0xae,%eax
 80485a6:	b3 e8                	mov    $0xe8,%bl
 80485a8:	80 85 21 0a 00 57 65 	addb   $0x65,0x57000a21(%ebp)
 80485af:	6c                   	insb   (%dx),%es:(%edi)
 80485b0:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 80485b3:	65                   	gs
 80485b4:	2c e6                	sub    $0xe6,%al
 80485b6:	ac                   	lods   %ds:(%esi),%al
 80485b7:	a2 e8 bf 8e e8       	mov    %al,0xe88ebfe8
 80485bc:	bf 9b e5 85 a5       	mov    $0xa585e59b,%edi
 80485c1:	e7 b3                	out    %eax,$0xb3
 80485c3:	bb e7 bb 9f 21       	mov    $0x219fbbe7,%ebx
 80485c8:	0a 00                	or     (%eax),%al
 80485ca:	e8 af b7 e8 be       	call   c6ed3d7e <_end+0xbee89d56>
 80485cf:	93                   	xchg   %eax,%ebx
 80485d0:	e5 85                	in     $0x85,%eax
 80485d2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 80485d3:	e5 ba                	in     $0xba,%eax
 80485d5:	8f                   	(bad)  
 80485d6:	e5 88                	in     $0x88,%eax
 80485d8:	97                   	xchg   %eax,%edi
 80485d9:	e5 8f                	in     $0x8f,%eax
 80485db:	b7 ef                	mov    $0xef,%bh
 80485dd:	bc 9a 00 25 64       	mov    $0x6425009a,%esp
 80485e2:	00                   	.byte 0x0
 80485e3:	25                   	.byte 0x25
 80485e4:	73 00                	jae    80485e6 <_IO_stdin_used+0x6a>

Disassembly of section .eh_frame_hdr:

080485e8 <.eh_frame_hdr>:
 80485e8:	01 1b                	add    %ebx,(%ebx)
 80485ea:	03 3b                	add    (%ebx),%edi
 80485ec:	30 00                	xor    %al,(%eax)
 80485ee:	00 00                	add    %al,(%eax)
 80485f0:	05 00 00 00 48       	add    $0x48000000,%eax
 80485f5:	fd                   	std    
 80485f6:	ff                   	(bad)  
 80485f7:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 80485fb:	00 4c fe ff          	add    %cl,-0x1(%esi,%edi,8)
 80485ff:	ff 70 00             	pushl  0x0(%eax)
 8048602:	00 00                	add    %al,(%eax)
 8048604:	c8 fe ff ff          	enter  $0xfffe,$0xff
 8048608:	90                   	nop
 8048609:	00 00                	add    %al,(%eax)
 804860b:	00 38                	add    %bh,(%eax)
 804860d:	ff                   	(bad)  
 804860e:	ff                   	(bad)  
 804860f:	ff cc                	dec    %esp
 8048611:	00 00                	add    %al,(%eax)
 8048613:	00 3a                	add    %bh,(%edx)
 8048615:	ff                   	(bad)  
 8048616:	ff                   	(bad)  
 8048617:	ff e0                	jmp    *%eax
 8048619:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

0804861c <__FRAME_END__-0xc0>:
 804861c:	14 00                	adc    $0x0,%al
 804861e:	00 00                	add    %al,(%eax)
 8048620:	00 00                	add    %al,(%eax)
 8048622:	00 00                	add    %al,(%eax)
 8048624:	01 7a 52             	add    %edi,0x52(%edx)
 8048627:	00 01                	add    %al,(%ecx)
 8048629:	7c 08                	jl     8048633 <_IO_stdin_used+0xb7>
 804862b:	01 1b                	add    %ebx,(%ebx)
 804862d:	0c 04                	or     $0x4,%al
 804862f:	04 88                	add    $0x88,%al
 8048631:	01 00                	add    %eax,(%eax)
 8048633:	00 20                	add    %ah,(%eax)
 8048635:	00 00                	add    %al,(%eax)
 8048637:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804863a:	00 00                	add    %al,(%eax)
 804863c:	f4                   	hlt    
 804863d:	fc                   	cld    
 804863e:	ff                   	(bad)  
 804863f:	ff 50 00             	call   *0x0(%eax)
 8048642:	00 00                	add    %al,(%eax)
 8048644:	00 0e                	add    %cl,(%esi)
 8048646:	08 46 0e             	or     %al,0xe(%esi)
 8048649:	0c 4a                	or     $0x4a,%al
 804864b:	0f 0b                	ud2    
 804864d:	74 04                	je     8048653 <_IO_stdin_used+0xd7>
 804864f:	78 00                	js     8048651 <_IO_stdin_used+0xd5>
 8048651:	3f                   	aas    
 8048652:	1a 3b                	sbb    (%ebx),%bh
 8048654:	2a 32                	sub    (%edx),%dh
 8048656:	24 22                	and    $0x22,%al
 8048658:	1c 00                	sbb    $0x0,%al
 804865a:	00 00                	add    %al,(%eax)
 804865c:	40                   	inc    %eax
 804865d:	00 00                	add    %al,(%eax)
 804865f:	00 d4                	add    %dl,%ah
 8048661:	fd                   	std    
 8048662:	ff                   	(bad)  
 8048663:	ff 72 00             	pushl  0x0(%edx)
 8048666:	00 00                	add    %al,(%eax)
 8048668:	00 41 0e             	add    %al,0xe(%ecx)
 804866b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048671:	02 6e c5             	add    -0x3b(%esi),%ch
 8048674:	0c 04                	or     $0x4,%al
 8048676:	04 00                	add    $0x0,%al
 8048678:	38 00                	cmp    %al,(%eax)
 804867a:	00 00                	add    %al,(%eax)
 804867c:	60                   	pusha  
 804867d:	00 00                	add    %al,(%eax)
 804867f:	00 30                	add    %dh,(%eax)
 8048681:	fe                   	(bad)  
 8048682:	ff                   	(bad)  
 8048683:	ff 61 00             	jmp    *0x0(%ecx)
 8048686:	00 00                	add    %al,(%eax)
 8048688:	00 41 0e             	add    %al,0xe(%ecx)
 804868b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048691:	87 03                	xchg   %eax,(%ebx)
 8048693:	41                   	inc    %ecx
 8048694:	0e                   	push   %cs
 8048695:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804869b:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 80486a2:	0e                   	push   %cs
 80486a3:	14 41                	adc    $0x41,%al
 80486a5:	0e                   	push   %cs
 80486a6:	10 c3                	adc    %al,%bl
 80486a8:	41                   	inc    %ecx
 80486a9:	0e                   	push   %cs
 80486aa:	0c c6                	or     $0xc6,%al
 80486ac:	41                   	inc    %ecx
 80486ad:	0e                   	push   %cs
 80486ae:	08 c7                	or     %al,%bh
 80486b0:	41                   	inc    %ecx
 80486b1:	0e                   	push   %cs
 80486b2:	04 c5                	add    $0xc5,%al
 80486b4:	10 00                	adc    %al,(%eax)
 80486b6:	00 00                	add    %al,(%eax)
 80486b8:	9c                   	pushf  
 80486b9:	00 00                	add    %al,(%eax)
 80486bb:	00 64 fe ff          	add    %ah,-0x1(%esi,%edi,8)
 80486bf:	ff 02                	incl   (%edx)
 80486c1:	00 00                	add    %al,(%eax)
 80486c3:	00 00                	add    %al,(%eax)
 80486c5:	00 00                	add    %al,(%eax)
 80486c7:	00 10                	add    %dl,(%eax)
 80486c9:	00 00                	add    %al,(%eax)
 80486cb:	00 b0 00 00 00 52    	add    %dh,0x52000000(%eax)
 80486d1:	fe                   	(bad)  
 80486d2:	ff                   	(bad)  
 80486d3:	ff 04 00             	incl   (%eax,%eax,1)
 80486d6:	00 00                	add    %al,(%eax)
 80486d8:	00 00                	add    %al,(%eax)
	...

080486dc <__FRAME_END__>:
 80486dc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	f8                   	clc    
 8049f35:	82                   	(bad)  
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 5c       	or     $0x5c000000,%eax
 8049f3d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	2c 82                	sub    $0x82,%al
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	65 00 00             	add    %al,%gs:(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	20 00                	and    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 d8                	add    %bl,%al
 8049f8d:	82                   	(bad)  
 8049f8e:	04 08                	add    $0x8,%al
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	d0 82 04 08 12 00    	rolb   0x120804(%edx)
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f a0             	ljmp   *-0x60(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 92             	ljmp   *-0x6e(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	46                   	inc    %esi
 804a001:	83 04 08 56          	addl   $0x56,(%eax,%ecx,1)
 804a005:	83 04 08 66          	addl   $0x66,(%eax,%ecx,1)
 804a009:	83 04 08 76          	addl   $0x76,(%eax,%ecx,1)
 804a00d:	83                   	.byte 0x83
 804a00e:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a010 <__data_start>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <__dso_handle>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <s1>:
 804a018:	80 85 04 08 ad 85 04 	addb   $0x4,-0x7a52f7fc(%ebp)

0804a01c <s2>:
 804a01c:	ad                   	lods   %ds:(%esi),%eax
 804a01d:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .bss:

0804a020 <completed.6159>:
 804a020:	00 00                	add    %al,(%eax)
	...

0804a024 <dtor_idx.6161>:
 804a024:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048280>
   a:	74 75                	je     81 <_init-0x8048277>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x8048262>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
